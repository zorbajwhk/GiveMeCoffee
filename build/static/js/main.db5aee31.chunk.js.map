{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","util/config.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","target","rel","href","googleURL","address","city","zipCode","category","toUpperCase","rating","yelpURL","reviewCount","React","Component","BusinessList","businesses","map","key","id","config","yelpAPI","SearchBar","state","term","location","sortBy","handleLocationChange","bind","handleSearch","handleSortByChange","handleLocationTranslation","triggerSearch","sortByOptions","sortByOption","setState","event","value","ogLocation","fetch","then","response","json","jsonResponse","translation","data","console","log","test","preventDefault","searchYelp","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","onKe","apiKey","Yelp","search","headers","Authorization","image_url","address1","zip_code","categories","title","review_count","address2","url","App","role","aria-label","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.db5aee31.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  \n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.business.googleURL}>\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.zipCode}`}</p>\n          </a>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} ★`}</h3>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.business.yelpURL}>{`${this.props.business.reviewCount} 口コミ`}</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(business => {\n            return <Business business={business} key={business.id} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","\nvar config = {\n    yelpAPI: '2bzaz9MBzj9iHOU0U46YLDzIeqAVLoU65WsAO8Uzknpy_fcWZgl-l2kkrrWzv9YKbZwcZ7Q_BywEIxvJe8gEmCfUGM4am2KAvqyBB0lrmQAoBPXYq6V_Ejg9W2s2YHYx',\n\t\t\"x-rapidapi-key\": \"0327f17517msh335ffa17706cb43p19564cjsnab183a31d83a\",\n\t\t\"x-rapidapi-host\": \"google-translate20.p.rapidapi.com\"\n  }\n\nexport default config;","import React from 'react';\nimport './SearchBar.css';\nimport config from '../../util/config';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    // this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.handleLocationTranslation = this.handleLocationTranslation.bind(this);\n    this.triggerSearch = this.triggerSearch.bind(this);\n\n    this.sortByOptions = {\n      'おすすめ順': 'best_match',\n      '評価順': 'rating',\n      '口コミ順': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n\n  handleLocationTranslation(ogLocation){\n    fetch(`https://google-translate20.p.rapidapi.com/translate?text=${ogLocation}&tl=en&sl=ja`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": config['x-rapidapi-key'],\n        \"x-rapidapi-host\": config['x-rapidapi-host']\n      }\n    })\n    .then(response => {\n          return response.json();\n        }).then(jsonResponse => {\n          const translation = jsonResponse.data.translation\n          console.log(translation);\n          this.setState({location: translation});\n          this.handleSearch();\n        });\n  }\n\n\n  triggerSearch(event){\n    const location = this.state.location\n    if(!/^[a-zA-Z]+$/.test(location)){\n      this.handleLocationTranslation(location);\n      event.preventDefault();\n    }else{\n    this.handleSearch();\n    event.preventDefault();\n    };\n  }\n\n  handleSearch(){\n      this.props.searchYelp(this.state.location, this.state.sortBy);\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          {/* <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} /> */}\n          <input placeholder=\"どの辺のお店を探したいですか？\" onChange={this.handleLocationChange} onKe/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <button onClick={this.triggerSearch}>レッツゴー!</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import config from './config';\n\nconst apiKey = config.yelpAPI; // Insert API key here.\n\nconst Yelp = {\n  search(location, sortBy) {\n    return fetch(`https://small-art-ab11.zjw-cors-anywhere.workers.dev/?https://api.yelp.com/v3/businesses/search?term=coffee&location=${location}&sort_by=${sortBy}&limit=40`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      }\n    }).then(response => {\n       // console.log(response.json());\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count,\n          googleURL: `https://www.google.com/maps/search/?api=1&query=${business.name}+${business.location.address1}%20${business.location.address2}`,\n          yelpURL: business.url,\n        }));\n      }\n    });\n  }\n};\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(location, sortBy) {\n    Yelp.search(location, sortBy).then(businesses => {\n      this.setState({businesses: businesses});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>GiveME<span role=\"img\" aria-label=\"コーヒー\">☕️</span></h1>\n          <h6>Zorba Jobs Wong | PI11A124 | A08</h6>\n        </div>\n        \n        <SearchBar searchYelp={this.searchYelp} />\n        \n        <BusinessList businesses={this.state.businesses} />\n      \n        <div className=\"footer\">\n          <small>GiveME<span role=\"img\" aria-label=\"コーヒー\">☕️</span> v1.1.0</small>\n          <small>Copyright © <a target=\"_blank\" rel=\"noopener\" href=\"https://zorbajobswong.com\">Zorba Jobs Wong</a>, All Rights Reserved.</small>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}